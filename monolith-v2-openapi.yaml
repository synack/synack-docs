openapi: 3.0.3
info:
  title: Synack API
  version: 2.0.0
  description: |
    Comprehensive API for Synack's security testing platform, providing endpoints for managing assessments, vulnerabilities, users, and security testing operations.
  contact:
    name: Synack Engineering
    email: engineering@synack.com
  license:
    name: Proprietary
servers:
  - url: https://client.synack.com/api
    description: Commercial - V2 API
  - url: https://client.synack.us/api
    description: FedRAMP (Medium) - V2 API

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    BasicAuth:
      type: http
      scheme: basic
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-Auth

  schemas:
    ProblemDetails:
      type: object
      required:
        - type
        - title
        - organization
      properties:
        type:
          type: string
          description: A URI reference that identifies the problem type
        title:
          type: string
          description: A short, human-readable summary of the problem type
        detail:
          type: string
          description: A human-readable explanation specific to this occurrence of the problem
        organization:
          type: string
          description: The organization UID associated with the problem

    ValidationProblemDetails:
      allOf:
        - $ref: '#/components/schemas/ProblemDetails'
        - type: object
          required:
            - invalidParams
          properties:
            invalidParams:
              type: array
              items:
                $ref: '#/components/schemas/ProblemDetailsSubProblem'

    ProblemDetailsSubProblem:
      type: object
      required:
        - name
        - reason
      properties:
        name:
          type: string
          description: The parameter name that caused the validation error
        reason:
          type: string
          description: The reason why the parameter is invalid

    Assessment:
      type: object
      required:
        - uid
        - name
        - createdAt
        - type
        - testCounts
        - vulnerabilityCount
      properties:
        uid:
          type: string
          example: 'assessmentuid921'
        name:
          type: string
          example: 'My Security Assessment'
        description:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        type:
          type: string
          enum: [web, host, api, mobile]
          example: 'Web'
        testCounts:
          $ref: '#/components/schemas/TestCounts'
        vulnerabilityCount:
          type: integer
          minimum: 0
          example: 13
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        ownerContacts:
          type: array
          items:
            $ref: '#/components/schemas/OwnerContact'

    TestCounts:
      type: object
      required:
        - pending
        - scheduled
        - active
        - paused
        - completed
      properties:
        pending:
          type: integer
          minimum: 0
        scheduled:
          type: integer
          minimum: 0
        active:
          type: integer
          minimum: 0
        paused:
          type: integer
          minimum: 0
        completed:
          type: integer
          minimum: 0

    Tag:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        editable:
          type: boolean
        organization_profile_id:
          type: integer

    OwnerContact:
      type: object
      required:
        - id
        - name
        - email
      properties:
        id:
          type: integer
        name:
          type: string
        email:
          type: string

    Vulnerability:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        description:
          type: string
        severity:
          type: string
          enum: [Critical, High, Medium, Low, Informational]
        status:
          type: string
        cvss_score:
          type: number
          format: float
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/Attachment'

    SuspectedVulnerability:
      type: object
      properties:
        id:
          type: integer
        asset_uid:
          type: string
        category_in_scope:
          type: boolean
        confidence:
          type: number
          format: float
        cvss_base:
          type: number
          format: float
        exploitable_locations:
          type: array
          items:
            type: string
        false_positive:
          type: boolean
        created_at:
          type: string
          format: date-time
        last_detected_at:
          type: string
          format: date-time
        payload:
          type: object
        reference_urls:
          type: array
          items:
            type: string
        severity:
          type: string
        source:
          type: string
        status:
          type: string
        vulnerability_status_id:
          type: integer
        reason_title:
          type: string
        reason_description:
          type: string
        organization_profile_id:
          type: integer
        automated_triage_status:
          type: string
        automated_triage_status_updated_at:
          type: string
          format: date-time

    User:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
        slug:
          type: string
        role:
          type: string
          enum: [client, researcher, admin]
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    Attachment:
      type: object
      properties:
        id:
          type: integer
        filename:
          type: string
        content_type:
          type: string
        file_size:
          type: integer
        created_at:
          type: string
          format: date-time

    PaginationMetadata:
      type: object
      required:
        - total
        - page
        - perPage
        - totalPages
        - first
        - last
        - self
      properties:
        total:
          type: integer
          minimum: 0
        page:
          type: integer
          minimum: 1
        perPage:
          type: integer
          minimum: 1
        totalPages:
          type: integer
          minimum: 0
        first:
          type: string
          format: uri
        last:
          type: string
          format: uri
        self:
          type: string
          format: uri
        prev:
          type: string
          format: uri
        next:
          type: string
          format: uri

    AssessmentStats:
      type: object
      properties:
        tests:
          type: integer
        averageRemediationDays:
          type: integer
        vulnerabilities:
          $ref: '#/components/schemas/VulnerabilityCounts'
        missions:
          $ref: '#/components/schemas/MissionCounts'
        coverage:
          $ref: '#/components/schemas/CoverageData'

    VulnerabilityCounts:
      type: object
      properties:
        inReview:
          type: integer
        accepted:
          type: integer
        acceptedOpen:
          type: integer

    MissionCounts:
      type: object
      properties:
        active:
          type: integer
        completed:
          type: integer

    CoverageData:
      type: object
      properties:
        pageHits:
          type: integer
        classifiedTraffic:
          type: integer

    Test:
      type: object
      properties:
        name:
          type: string
        testPlan:
          type: string
          enum: [Synack365, Synack90, Synack14]
        testObjective:
          type: string
        createdAt:
          type: string
          format: date-time

    Comment:
      type: object
      properties:
        id:
          type: integer
        text:
          type: string
        type:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        user:
          $ref: '#/components/schemas/User'
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/Attachment'

    PatchVerification:
      type: object
      properties:
        id:
          type: integer
        message:
          type: string
        status:
          type: string
        created_at:
          type: string
          format: date-time
        user:
          $ref: '#/components/schemas/User'

    OrganizationProfile:
      type: object
      properties:
        id:
          type: integer
        slug:
          type: string
        name:
          type: string
        description:
          type: string
        active:
          type: boolean
        created_at:
          type: string
          format: date-time

    AssessmentGroup:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        created_at:
          type: string
          format: date-time

paths:
  # V2 Client API - Assessments
  /v2/organizations/{organizationUid}/assessments:
    get:
      operationId: getOrganizationAssessments
      summary: Get assessments for an organization
      description: Retrieve a paginated list of assessments for a specific organization with filtering and sorting options
      tags:
        - Assessments
      parameters:
        - name: organizationUid
          in: path
          required: true
          schema:
            type: string
          description: The unique identifier of the organization
        - name: sort
          in: query
          schema:
            type: string
            default: created_at
            enum:
              - name
              - created_at
              - pending_test_count
              - scheduled_test_count
              - active_test_count
              - paused_test_count
              - completed_test_count
              - total_vulnerability_count
          description: Field to sort by
        - name: sortDir
          in: query
          schema:
            type: string
            default: desc
            enum: [desc, asc]
          description: Sort direction
        - name: page
          in: query
          schema:
            type: integer
            minimum: 1
            default: 1
          description: Page number for pagination
        - name: perPage
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 50
            default: 10
          description: Number of items per page
        - name: search
          in: query
          schema:
            type: string
          description: Search term to filter assessments by name
        - name: types[]
          in: query
          schema:
            type: array
            items:
              type: string
              enum: [web, host, api, mobile]
          explode: true
          description: Filter by assessment types
        - name: tagIds[]
          in: query
          schema:
            type: array
            items:
              type: integer
          explode: true
          description: Filter by tag IDs
      responses:
        '200':
          description: Successfully retrieved assessments
          content:
            application/json:
              schema:
                type: object
                required:
                  - assessments
                  - metadata
                properties:
                  assessments:
                    type: array
                    items:
                      $ref: '#/components/schemas/Assessment'
                  metadata:
                    type: object
                    required:
                      - pagination
                    properties:
                      pagination:
                        $ref: '#/components/schemas/PaginationMetadata'
        '400':
          description: Invalid query parameters
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetails'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Organization not found

    post:
      operationId: createOrganizationAssessment
      summary: Create a new assessment
      description: Creates a new assessment for an organization
      tags:
        - Assessments
      parameters:
        - name: organizationUid
          in: path
          required: true
          schema:
            type: string
          description: The unique identifier of the organization
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - authenticationSelfRegistrationEnabled
                - orgListingGroupId
                - categoryId
                - ownerContactsAttributes
                - assets
              properties:
                name:
                  type: string
                  description: Name of the assessment
                description:
                  type: string
                  description: Description of the assessment
                authenticationSelfRegistrationEnabled:
                  type: boolean
                  description: Whether self-registration is enabled
                orgListingGroupId:
                  type: integer
                  description: ID of the organization listing group
                gatewayId:
                  type: string
                  description: Gateway ID for the assessment
                categoryId:
                  type: integer
                  description: Category ID for the assessment
                tagNames:
                  type: array
                  items:
                    type: string
                  description: Names of tags to associate with the assessment
                ownerContactsAttributes:
                  type: array
                  items:
                    type: object
                    properties:
                      userId:
                        type: string
                  description: Owner contact attributes
                files:
                  type: array
                  items:
                    type: object
                    properties:
                      signedId:
                        type: string
                  description: File attachments
                assets:
                  type: array
                  items:
                    type: object
                    properties:
                      uid:
                        type: string
                  description: Asset UIDs for the assessment
      responses:
        '201':
          description: Assessment created successfully
          content:
            application/json:
              schema:
                type: object
                required:
                  - assessment
                properties:
                  assessment:
                    $ref: '#/components/schemas/Assessment'
        '400':
          description: Invalid parameters
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetails'
        '422':
          description: Invalid operation
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '500':
          description: Internal server error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'

  /v2/organizations/{organizationUid}/assessments/{assessmentUid}/tests:
    post:
      operationId: createAssessmentTest
      summary: Create a test for an assessment
      description: Create a new test for a specific assessment
      tags:
        - Tests
      parameters:
        - name: organizationUid
          in: path
          required: true
          schema:
            type: string
          description: The unique identifier of the organization
        - name: assessmentUid
          in: path
          required: true
          schema:
            type: string
          description: The unique identifier of the assessment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - testPlan
              properties:
                name:
                  type: string
                  description: Name of the test
                testPlan:
                  type: string
                  enum: [Synack365, Synack90, Synack14]
                  description: Test plan type
                testObjective:
                  type: string
                  description: Objective of the test
      responses:
        '201':
          description: Test created successfully
          content:
            application/json:
              schema:
                type: object
                required:
                  - test
                properties:
                  test:
                    $ref: '#/components/schemas/Test'
        '400':
          description: Failed to parse parameters
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetails'
        '404':
          description: Assessment not found

  /v2/organizations/{organizationUid}/assessments/{assessmentUid}/stats:
    get:
      operationId: getAssessmentStats
      summary: Get assessment statistics
      description: Retrieve statistics for a specific assessment
      tags:
        - Assessments
      parameters:
        - name: organizationUid
          in: path
          required: true
          schema:
            type: string
          description: The unique identifier of the organization
        - name: assessmentUid
          in: path
          required: true
          schema:
            type: string
          description: The unique identifier of the assessment
      responses:
        '200':
          description: Assessment statistics retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssessmentStats'
        '404':
          description: Assessment not found

security:
  - BearerAuth: []
  - BasicAuth: []
  - ApiKeyAuth: []

tags:
  - name: Assessments
    description: Operations related to security assessments
  - name: Tests
    description: Operations related to security tests
  - name: Vulnerabilities
    description: Operations related to security vulnerabilities
  - name: Suspected Vulnerabilities
    description: Operations related to suspected vulnerabilities
  - name: Comments
    description: Operations related to comments
  - name: Patch Verifications
    description: Operations related to patch verifications
  - name: Users
    description: Operations related to users
  - name: Assessment Groups
    description: Operations related to assessment groups
  - name: Tags
    description: Operations related to tags
  - name: Vulnerability Statuses
    description: Operations related to vulnerability statuses
  - name: Listings
    description: Operations related to listings
